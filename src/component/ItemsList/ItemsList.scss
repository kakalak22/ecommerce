@use "../Topbar/Topbar.scss";
@use "../../variables.scss";

.itemslist {
  @extend .layout;
  .itemslist__inner {
    @extend .layout__inner;
    align-items: unset;
    height: 900px;
    .filter {
      width: 20%;
      height: 100%;
      display: flex;
      justify-content: center;
      // border-left: 1px solid variables.$gray;
      border-right: 1px solid variables.$gray;
      overflow: auto;

      .filter__inner {
        width: 90%;

        .category-filter {
          ul {
            list-style-type: none;
            padding: 0;
            display: flex;
            flex-direction: column;
            gap: 1rem;

            li {
              .container {
                display: flex;
                align-items: flex-end;
                position: relative;
                padding-left: 35px;
                cursor: pointer;
                font-size: 16px;
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
                height: 25px;
              }

              /* Hide the browser's default checkbox */
              .container input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
                height: 0;
                width: 0;
              }

              /* Create a custom checkbox */
              .checkmark {
                position: absolute;
                top: 0;
                left: 0;
                height: 25px;
                width: 25px;
                background-color: variables.$gray;
              }

              /* On mouse-over, add a grey background color */
              .container:hover input ~ .checkmark {
                background-color: #eee;
              }

              /* When the checkbox is checked, add a black background */
              .container input:checked ~ .checkmark {
                background-color: black;
              }

              /* Create the checkmark/indicator (hidden when not checked) */
              .checkmark:after {
                content: "";
                position: absolute;
                display: none;
              }

              /* Show the checkmark when checked */
              .container input:checked ~ .checkmark:after {
                display: block;
              }

              /* Style the checkmark/indicator */
              .container .checkmark:after {
                left: 9px;
                top: 5px;
                width: 5px;
                height: 10px;
                border: solid white;
                border-width: 0 3px 3px 0;
                -webkit-transform: rotate(45deg);
                -ms-transform: rotate(45deg);
                transform: rotate(45deg);
              }
            }
          }
        }
        .price-filter {
          .price-range-container {
            display: flex;
            width: 100%;
            gap: 0.5rem;
            span {
              width: 5%;
              font-size: 1.5em;
              text-align: center;
            }
            input {
              width: 40%;
              outline: none;
              text-align: center;
            }
            input::-webkit-outer-spin-button,
            input::-webkit-inner-spin-button {
              -webkit-appearance: none;
              margin: 0;
            }
          }

          & > :nth-child(3) {
            margin-top: 1rem;
          }
        }

        .rate-filter {
          display: flex;
          flex-direction: column;
          gap: 0.5rem;
          h4 {
            margin-bottom: 5px;
          }
        }

        .sort-by {
          display: flex;
          flex-direction: column;
          gap: 1rem;

          input {
            color: #000;
          }
        }

        .button-container {
          margin-top: 30px;
          width: 100%;
          display: flex;
          justify-content: center;
          button {
            padding: 10px;
            width: 40%;
            border: 1px solid variables.$gray;
            cursor: pointer;

            &:hover {
              background-color: variables.$gray;
              transition: all ease-in-out 400ms;
            }
          }
          & > :nth-child(1) {
            border-right: unset;
            border-top-left-radius: 5px;
            border-bottom-left-radius: 5px;
          }
          & > :nth-child(2) {
            border-left: unset;
            border-top-right-radius: 5px;
            border-bottom-right-radius: 5px;
          }
        }
      }
    }
    .list {
      width: 75%;
      height: 800px;
      margin-left: 1rem;
      display: flex;
      flex-direction: column;

      .filter-button-container {
        display: none;
      }
      .items-container {
        display: grid;
        grid-template-columns: auto auto auto;
        justify-items: center;
        gap: 1rem;
        row-gap: 2rem;
        margin-top: 20px;
      }
      .loading-container {
        height: 100%;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
  }
}

//custom radio checkbox Style
/* Customize the label (the container) */
.radio-container {
  display: flex;
  align-items: flex-end;
  position: relative;
  padding-left: 35px;
  cursor: pointer;
  font-size: 16px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 25px;
}

/* Hide the browser's default radio button */
.radio-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom radio button */
.radio-checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.radio-container:hover input ~ .radio-checkmark {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.radio-container input:checked ~ .radio-checkmark {
  background-color: #000;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.radio-checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.radio-container input:checked ~ .radio-checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.radio-container .radio-checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}
//custom paginate style

.sweetPagination {
  margin-top: 2rem;
  .paginationUL {
    .pageItem {
      .pageButton {
        &:hover {
          background-color: #000 !important;
        }
      }
      .activeButton {
        background-color: #000 !important;
      }
    }
  }
}

//responsive

@media screen and (max-width: 1024px) {
  .itemslist {
    .itemslist__inner {
      .list {
        margin-right: 1rem;
      }
    }
  }
}

@media screen and (max-width: 768px) {
  .itemslist {
    .itemslist__inner {
      .list {
        margin-right: 1rem;
        width: 100%;

        .filter-button-container {
          width: 100px;
          height: 50px;
          align-items: center;
          display: flex;
          gap: 0.5rem;
          font-size: 30px;

          span {
            font-size: 20px;
          }
          & > :nth-child(1) {
            &:hover {
              transform: scale(1.2);
              transition: all ease 400ms;
            }
          }
        }
      }
    }

    .filter-active {
      z-index: 4 !important;
      opacity: 1 !important;
    }

    .filter {
      position: fixed;
      left: 0px;
      top: 0px;
      height: 100% !important;
      z-index: -1;
      width: 100% !important;
      opacity: 0;
      transition: all ease-in-out 200ms;

      .filter__right {
        background-color: rgba(79, 79, 79, 0.4);
        width: 100%;
        height: 100%;
        opacity: 0;
        z-index: -1;
        transition: all ease-in-out 300ms;
      }
      // display: none !important;

      .filter__right-active {
        opacity: 1;
        z-index: unset;
      }

      .filter__inner {
        width: 40% !important;
        background-color: #ffff;
        position: fixed;
        left: -400px;
        height: 100%;
        padding: 1rem;
        transition: all ease 400ms;
      }

      .filter__inner-active {
        transform: translateX(400px);
      }
    }
  }
}

@media screen and (max-width: 1024px) {
  .itemslist {
    height: 1250px;
    .itemslist__inner {
      .list {
        .items-container {
          grid-template-columns: auto auto;
        }
      }
    }
  }
}

@media screen and (max-width: 510px) {
  .radio-container {
    font-size: 13px;
  }

  .itemslist {
    height: 1250px;
    .itemslist__inner {
      .list {
        .items-container {
          grid-template-columns: auto auto;
        }
      }
    }
  }
}
